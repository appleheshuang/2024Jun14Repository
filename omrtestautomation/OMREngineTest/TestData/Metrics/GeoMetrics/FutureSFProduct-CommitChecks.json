{
  "BaseData": {
    "T1UID": "T17481-1-{{TestUniqueIntegrationId}}",
    "T2UID": "T17481-2-{{TestUniqueIntegrationId}}",
    "DistrictUID": "D17481-{{TestUniqueIntegrationId}}",
    "A1_UK_UId": "A1-17481-{{TestUniqueIntegrationId}}",
    "A2_UK_UId": "A2-17481-{{TestUniqueIntegrationId}}",
    "A3_UK_UId": "A3-17481-{{TestUniqueIntegrationId}}",
    "A4_US_UId": "A4-17481-{{TestUniqueIntegrationId}}",
    "A5_PN_UId": "A5-17481-{{TestUniqueIntegrationId}}"
  },

  "Tests": {
    //Following tests CheckEqualityAccountMetricCurrencyIsoCodeRegionIsoCurrencyCode, CheckEqualityGeoMetricCurrencyIsoCodeRegionIsoCurrencyCode CheckEqualityAccountMetricCurrencyIsoCodeRegionIsoCurrencyCode check functionality of OMR-19682 (XXXMetric.CurrencyCode = OMRegion.IsoCurrencyCode)
    "MergeResults": [
      {
        "testname": "CheckEqualityAccountMetricCurrencyIsoCodeRegionIsoCurrencyCode",
        "query": "select count(am.\"SOMAccountMetricId\") \"ct\" from output.\"OMAccountMetric\" am join output.\"OMSalesForce\" sf on am.\"SOMSalesForceId\" = sf.\"SOMSalesForceId\"  join static.\"OMRegion\" r on r.\"SOMRegionId\" = sf.\"SOMRegionId\" where not equal_null(am.\"CurrencyIsoCode\", r.\"CurrencyIsoCode\")",
        "exp_result": "[{ct:0}]"
      },
      {
        "testname": "CheckEqualityGeoMetricCurrencyIsoCodeRegionIsoCurrencyCode",
        "query": "select count(gm.\"SOMGeographyMetricId\") \"ct\" from output.\"OMGeographyMetric\" gm join output.\"OMSalesForce\" sf on gm.\"SOMSalesForceId\" = sf.\"SOMSalesForceId\"  join static.\"OMRegion\" r on r.\"SOMRegionId\" = sf.\"SOMRegionId\" where not equal_null(gm.\"CurrencyIsoCode\", r.\"CurrencyIsoCode\")",
        "exp_result": "[{ct:0}]"
      },
      {
        "testname": "CheckEqualityTerritoryMetricCurrencyIsoCodeRegionIsoCurrencyCode",
        "query": "select count(tm.\"SOMTerritoryMetricId\") \"ct\" from output.\"OMTerritoryMetric\" tm join output.\"OMSalesForce\" sf on tm.\"SOMSalesForceId\" = sf.\"SOMSalesForceId\"  join static.\"OMRegion\" r on r.\"SOMRegionId\" = sf.\"SOMRegionId\" where not equal_null(tm.\"CurrencyIsoCode\", r.\"CurrencyIsoCode\")",
        "exp_result": "[{ct:0}]"
      }
    ],
    "MetricResult": [
      // Account & Rollup results
      {
        "testname": "Future-AccountMetricResult_Precheck",
        "entity": "Account",
        "salesforceId": "{{ScenarioSalesForce.SOMSalesForceId__c[1]}}",
        "entityId": "{{A1_UK_UId}},{{A2_UK_UId}},{{A3_UK_UId}},{{A4_US_UId}},{{A5_PN_UId}}",
        "columns": "Metric11,Metric12,Metric13,Metric14,Metric15,Metric16",
        "exp_result": "[]"
      },
      {
        "testname": "Future-GeoRollupResult",
        "entity": "Geography",
        "salesforceId": "{{ScenarioSalesForce.SOMSalesForceId__c[1]}}",
        "entityId": "{{G1_Post_UId}},{{G2_Post_UId}},{{G7_Post_UId}},{{G3_Brick_UId}},{{G4_Brick_UId}},{{G8_Brick_UId}},{{G5_State_UId}},{{G6_State_UId}},{{G9_State_UId}}",
        "columns": "Metric11,Metric12,Metric13,Metric14,Metric15,Metric16",
        "exp_result": "[]"
      },
      // Geo Metric Results
      {
        "testname": "Future-GeoMetricResult",
        "entity": "Geography",
        "salesforceId": "{{ScenarioSalesForce.SOMSalesForceId__c[1]}}",
        "entityId": "{{G1_Post_UId}},{{G2_Post_UId}},{{G7_Post_UId}},{{G3_Brick_UId}},{{G4_Brick_UId}},{{G8_Brick_UId}},{{G5_State_UId}},{{G6_State_UId}},{{G9_State_UId}}",
        "columns": "Metric19,Metric20,Metric10",
        "exp_result": "[]"
      },
      // Territory rollups
      {
        "testname": "Future-AcctToTerritory-RollupResult",
        "entity": "Territory",
        "salesforceId": "{{ScenarioSalesForce.SOMSalesForceId__c[1]}}",
        "entityId": "{{T2UID}}",
        "columns": "Metric11,Metric12,Metric13,Metric14,Metric15,Metric16,Metric17",
        "exp_result": "[]"
      },
      {
        "testname": "Future-GeoToTerritory-RollupResult",
        "entity": "Territory",
        "salesforceId": "{{ScenarioSalesForce.SOMSalesForceId__c[1]}}",
        "entityId": "{{T2UID}},{{T1UID}},{{DistrictUID}}",
        "columns": "Metric10,Metric18,Metric19,Metric20",
        "exp_result": "[]"
      }
    ],
    "MetricSummary": [
      {
        "testname": "Territory2-AcctRollupSummary",
        "territory": "{{T2UID}}",
        "columns": "Metric11Before,Metric11After,Metric12Before,Metric12After,Metric13Before,Metric13After,Metric14Before,Metric14After,Metric15Before,Metric15After,Metric16Before,Metric16After,Metric17Before,Metric17After",
        "exp_result": "[]"
      },
      {
        "testname": "Territory2-GeoRollupSummary",
        "territory": "{{T2UID}}",
        "columns": "Metric10Before,Metric10After,Metric19Before,Metric19After,Metric20Before,Metric20After,Metric18Before,Metric18After",
        "exp_result": "[]"
      },
      {
        "testname": "Territory1-GeoRollupSummary",
        "territory": "{{T1UID}}",
        "columns": "Metric10Before,Metric10After,Metric19Before,Metric19After,Metric20Before,Metric20After,Metric18Before,Metric18After",
        "exp_result": "[]"
      }
      /* The result is no longer valid in v20. Needs to be updated per OMR-20279
      {
        "testname": "District-RollupSummary",
        "territory": "{{DistrictUID}}",
        "columns": "Metric10Before,Metric10After,Metric19Before,Metric19After,Metric20Before,Metric20After,Metric18Before,Metric18After",
        "exp_result": "[]"
      }*/
    ]
  }
}
